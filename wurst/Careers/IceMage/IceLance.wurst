package IceLance
import IceMage
import TimerUtils
import MathHelper
import TriggerHelper
import HashMap
import ExternalDefines
import EditorHelper

public class IceLance extends IceMageSkill
	static constant int self_id = 'im0e'
	static constant int help_id = 'im1e'
	static constant real last_time = 10.
	static constant int unit_id = 'im0u'
	static constant real unit_offset = 95.
	static constant int unit_count = 7
	static constant real dmg_radius = 55.
	static constant real dmg = 300.
	
	private boolean from_unit
	private vec2 pt1
	private vec2 pt2
	private trigger tr_help = null
	construct(unit u)
		super(u)
		tr_help = CreateTrigger()
		init_self()

	ondestroy
		tr_help..disable()..destr()

	override function listen()
		m_tr_self..registerUnitEvent(m_self_unit, EVENT_UNIT_SPELL_EFFECT)
			..addCondition(Filter(()->GetSpellAbilityId()==IceLance.self_id))
			..addAction(function skill_act_forwarding)
		tr_help..registerUnitEvent(m_self_unit, EVENT_UNIT_SPELL_EFFECT)
			..addCondition(Filter(()->GetSpellAbilityId()==IceLance.help_id))
			..setData(this castTo int)
			..addAction(function IceLance.choose_point2)
		
	override function cast()
		print(GetSpellAbilityId().toString())
		choose_point1()

	private function choose_point1()
		location lc = GetSpellTargetLoc()
		pt1 = vec2(GetLocationX(lc), GetLocationY(lc))
		RemoveLocation(lc)
		GetOwningPlayer(m_self_unit).setAbilityAvailable(IceLance.self_id, false)
		m_self_unit.addAbility(IceLance.help_id)
		CreateTimer()..setData(this castTo int)
			..startPeriodic(1, function IceLance.start)

	static private function choose_point2()
		location lc = GetSpellTargetLoc()
		var instance = GetTriggeringTrigger().getData() castTo IceLance
		instance.from_unit = false
		instance.pt2 = vec2(GetLocationX(lc), GetLocationY(lc))
		RemoveLocation(lc)

	static function start()
		timer t = GetExpiredTimer()
		IceLance instance = t.getData() castTo IceLance

		GetOwningPlayer(instance.m_self_unit).setAbilityAvailable(IceLance.self_id, true)
		instance.m_self_unit.removeAbility(IceLance.help_id)

		vec2 pt1
		vec2 pt2
		if instance.from_unit
			pt1 = instance.m_self_unit.getPos()
			pt2 = instance.pt1
		else
			pt1 = instance.pt1
			pt2 = instance.pt2
		if _DEBUG
			print(pt1.toString() + "|n" + pt2.toString())
		vec2 cur_loc = pt1
		if instance.from_unit
			cur_loc = MathHelper.forward(cur_loc, MathHelper.get_angle(pt1, pt2), IceLance.unit_offset)

		var dmg_once = new HashMap<unit, boolean>
		for i = 0 to unit_count - 1
			createUnit(GetOwningPlayer(instance.m_self_unit),
				IceLance.unit_id, cur_loc, bj_UNIT_FACING.fromRad())
				..setTimedLife(IceLance.last_time)
				..setPathing(false)
				..setPos(cur_loc)
			group g = CreateGroup()
			g.enumUnitsInRange(cur_loc, IceLance.dmg_radius)
			for uTarget in g
				if not dmg_once.has(uTarget) and not IsUnitAlly(uTarget, GetOwningPlayer(instance.m_self_unit))
					and uTarget.isAlive()
					instance.m_self_unit.damageTarget(uTarget, IceLance.dmg)
					dmg_once.put(uTarget, true)
			g.destr()
			flashEffect("Abilities\\Spells\\Undead\\FrostNova\\FrostNovaTarget.mdl", cur_loc)
			cur_loc = MathHelper.forward(cur_loc, MathHelper.get_angle(pt1, pt2), IceLance.unit_offset)


		instance.init_self()
		destroy dmg_once
		t.pause()
		t.destr()

	private function init_self()
		from_unit = true
		pt1 = vec2(0,0)
		pt2 = vec2(0,0)


@compiletime
function create_ice_lance()
	var editor = EditorHelper.create_channel_template(IceLance.self_id, emSkillKey.E)
	editor..setCastRange(1, 900)
		..setManaCost(1, 27)
		..setCooldown(1, 6)
		..setButtonPositionNormalX(2)
		..setButtonPositionNormalY(2)
		..setHotkeyNormal("E")
		..setTargetType(1, emTargetType.Ground castTo int)
		..setName("IceLance")
		..setTooltipNormal(1,
            Color_Define.COLOR_ICEMAGE + "Ice Lance" +
            Color_Define.COLOR_HOT_KEY + "(E)")
		..setTooltipNormalExtended(1,
            Color_Define.COLOR_NORMAL + "依次选择两个点，从第一个点向第二个点释放IceLance，对命中单位造成300伤害。|n" +
            Color_Define.COLOR_LAST_TIME + "冰块持续10秒。|n" +
            Color_Define.COLOR_COOL_DOWN + "CD:6s")
		..setIconNormal("Ice Lance.blp")
		..setArtEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl")

	destroy editor

@compiletime
function create_ice_lance_help()
	var editor = EditorHelper.create_channel_template(IceLance.help_id, emSkillKey.E)
	editor..setCastRange(1, 1100)
		..setManaCost(1, 0)
		..setCooldown(1, 0)
		..setButtonPositionNormalX(2)
		..setButtonPositionNormalY(2)
		..setHotkeyNormal("E")
		..setTargetType(1, emTargetType.Ground castTo int)
		..setName("IceLanceHelp")
		..setTooltipNormal(1,
            Color_Define.COLOR_ICEMAGE + "Ice Lance (Direction)" +
            Color_Define.COLOR_HOT_KEY + "(E)")
		..setTooltipNormalExtended(1,
            Color_Define.COLOR_NORMAL + "依次选择两个点，从第一个点向第二个点释放IceLance，对命中单位造成300伤害。|n" +
            Color_Define.COLOR_LAST_TIME + "冰块持续10秒。|n" +
            Color_Define.COLOR_COOL_DOWN + "CD:6s")
		..setIconNormal("ReplaceableTextures\\CommandButtons\\BTNAttackGround.blp")
		..setArtEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl")

	destroy editor

@compiletime
function create_ice_lance_ice_block()
	var editor = new UnitDefinition(IceLance.unit_id, 'hwat')
	editor..setName("Ice Block")
		..setUpgradesUsed("")
		..setCollisionSize(24.)
		..setUnitSoundSet("")
		..setScalingValue(.45)
		..setModelFile("Doodads\\Icecrown\\Rocks\\Icecrown_Crystal\\Icecrown_Crystal7.mdl")
		..setSelectionScale(1.)
		..setDeathTimeseconds(0.1)
		..setSpeedBase(0)
		..setDefenseBase(0)
		..setArmorType(ArmorType.Hero)
		..setAcquisitionRange(0.)
		..setAttacksEnabled(0)
		..setLevel(1)
		..setHitPointsMaximumBase(2000)
		..setHitPointsRegenerationRate(0.)
		..setSightRadiusDay(0)
		..setSightRadiusNight(0)
		..setHideMinimapDisplay(true)
		..setFoodCost(0)


	destroy editor