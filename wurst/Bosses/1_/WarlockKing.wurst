package WarlockKing

import Boss
import ClosureTimers
import SoundUtils
import DreamingSouls
import initlater ManipulatingEnergy
import test1
import test2

public class WarlockKing extends Boss
    static let self_id = 'bs10'
    static let born_pos = gg_rct_BOSS1.getCenter() + vec2(0, 350)
    static let play_rect = gg_rct_BOSS1
    static let sd_pre = new SoundDefinition(Sounds.necromancerWhat1, false)
    static let self_name = "暴虐术士王"
    static let enter_pos = gg_rct_BOSS1.getCenter() - vec2(0, 350)

    construct(int id, vec2 born, int index, rect rc, vec2 enter)
        super(id, born, index, rc, enter)
        

    override function create_self()
        super.create_self()
        m_tr_charge..registerUnitStateEvent(m_self_unit, UNIT_STATE_MANA, GREATER_THAN, 799.5)
            ..addAction(function cb_charged)
            .setData(this castTo int)
        m_q..add_skill(new DreamingSouls(this))
            ..add_skill(new ManipulatingEnergy(this))
            ..add_skill(new test1(this))
            ..add_skill(new test2(this))
        m_self_unit.setMana(700)
        
    override function destroy_self()
        m_tr_charge.disable()
        m_q.clear()
        super.destroy_self()
        
    static function cb_charged()
        (GetTriggeringTrigger().getData() castTo WarlockKing).change_state(BossState.infinity)

   
    override function prepare()
        super.prepare()

    override function start()
        m_self_unit.setAnimation("stand,channel")
        sd_pre.play()

        //ClearTextMessages()
        printTimed("暴虐术士王：等待你们的只有无尽的黑暗。", 4.)
        doAfter(2.) ->
            super.start()
            
    override function ondeath()
        ClearTextMessages()
        printTimed("暴虐术士王：", 2)
        doAfter(5.) ->
            super.ondeath()
            
    override function onstart()
        super.onstart()


    override function _main()
        super._main()
        

    override function state_charged()
        super.state_charged()
        

    override function change_state(BossState st)
        super.change_state(st)

    override function get_name() returns string
        return self_name

    