package ReviveHelper

import HashMap
import IPlayerUnit
import PlayerUnitHelper
import EditorHelper

public class ReviveHelper
    static var map_death_unit = new IterableMap<unit, unit>
    static var map_unit_creator = new HashMap<career, int>
    static function create_death_unit(unit u_dead)
        int nobj = PlayerUnitHelper.get_instance(u_dead)
        if nobj == -1
            if _DEBUG
                print("ReviveHelper:not a playerunit")
            return
        var obj = nobj castTo IPlayerUnit
        if obj == null
            if _DEBUG
                print("ReviveHelper:bad bind")
            return
        if not map_unit_creator.has(obj.get_career())
            if _DEBUG
                print("ReviveHelper:bad init")
            return
        int u_id = map_unit_creator.get(obj.get_career())
        unit u = createUnit(u_dead.getOwner(), u_id, u_dead.getPos(), u_dead.getFacingAngle())
        u.setAnimation("death")
        map_death_unit.put(u, u_dead)

    static function can_revive(vec2 pos) returns unit
        real fmin = 9999
        unit u = null
        for i in map_death_unit
            real dis = (i.getPos() - pos).lengthSq()
            if dis <= 50*50
                if fmin > dis
                    fmin = dis
                    u = i

        return u

    static function revive(unit u_faker, real hp_percent)
        if not map_death_unit.has(u_faker)
            if _DEBUG
                print("ReviveHelper:bad revive")
            return
        real final_percent = hp_percent > 0.5 ? 0.5 : hp_percent
        print("revive")
        unit u = map_death_unit.get(u_faker)
        u..revive(u_faker.getPos(), false)
            ..setXY(u_faker.getPos())
            ..setHP(u.getMaxHP() * final_percent)
        
        map_death_unit.remove(u_faker)
        RemoveUnit(u_faker)

    static function can_revive_faker(unit u_faker) returns bool
        return map_death_unit.has(u_faker)
    
    static function can_revive(vec2 pos, unit u) returns unit
        for i in map_death_unit
            print(i.getHandleId())
            if map_death_unit.get(i) == u
                if (u.getPos() - pos).lengthSq() <= 50*50
                    return i
        return null

@compiletime
function create_dead_units()
    if compiletime
        EditorHelper.create_effect_faker_unit('ddim', 0.9, "units\\human\\Sorceress\\Sorceress_V1.mdl", color(255, 255, 255))
        EditorHelper.create_effect_faker_unit('ddpr', 0.9, "units\\human\\Priest\\Priest", color(255, 255, 255))
        EditorHelper.create_effect_faker_unit('ddwl', 0.9, "units\\undead\\Necromancer\\Necromancer", color(255, 255, 255))
        EditorHelper.create_effect_faker_unit('ddam', 0.9, "units\\human\\Jaina\\Jaina", color(255, 255, 255))
        EditorHelper.create_effect_faker_unit('ddwr', 0.9, "", color(255, 255, 255))
    else
        ReviveHelper.map_unit_creator..put(career.ice_mage, 'ddim')..put(career.priest, 'ddpr')
            ..put(career.warlock, 'ddwl')..put(career.arcane_mage, 'ddam')
init
    create_dead_units()