package PlayerUnit
import ExternalDefines
import public initlater IPlayerUnit
import PlayerHelper
import LinkedList

public class PlayerUnit extends IPlayerUnit
    protected var m_ls_skill = new LinkedList<IBaseSkills>
    protected Buffs m_buffs
    override function listen_all()
        for s in m_ls_skill
            s.listen()

    override function can_add_buff() returns boolean
        return m_is_invulnerable
    
    override function init_all()

    override function init_self()
        skip

    override function add_buff(int id, BuffClearType cltp, BuffType tp, IBaseSkills obj)
        m_buffs.add_buff(id, cltp, tp, obj)

    override function remove_buff(BuffClearType cltp, BuffType tp)
        m_buffs.remove_buff(cltp, tp)
    
    override function remove_buff(int id)
        m_buffs.remove_buff(id)
        
    construct(player pl, unit u)
        m_self_unit = u
        m_control_player = pl
        m_buffs = new Buffs(u)
        //whenver create a playerunit, register it!
        //actually, in this map, each player only has one unit
        if not PlayerHelper.register_controlling_unit(pl, u)
            if _DEBUG
                print("repeat choose")
    
    ondestroy
        if _DEBUG
            print("PlayerUnit::destroy")
        if not PlayerHelper.unregister_controlling_unit(m_control_player, m_self_unit)
            if _DEBUG
             print("repeat choose")

        m_ls_skill.clear()

    