package PlayerUnit
import ExternalDefines
import public initlater IPlayerUnit
import PlayerHelper
import HashMap
import BaseSkills

public class PlayerUnit extends IPlayerUnit
    protected var m_mapSkill = new IterableMap<int, IBaseSkills>

    override function listen_all()
        for s in m_mapSkill
            m_mapSkill.get(s).listen()

    override function init_all()

    override function spell(int nSkillId)
        m_mapSkill.get(nSkillId).cast()

    override function init_self()
        skip

    construct(player pl, unit u)
        m_self_unit = u
        m_control_player = pl
        //whenver create a playerunit, register it!
        //actually, in this map, each player only has one unit
        if not PlayerHelper.register_controlling_unit(pl, u)
            if _DEBUG
                print("repeat choose")
    
    ondestroy
        if _DEBUG
            print("PlayerUnit::destroy")
        if not PlayerHelper.unregister_controlling_unit(m_control_player, m_self_unit)
            if _DEBUG
             print("repeat choose")
        for s in m_mapSkill
            destroy m_mapSkill.get(s)